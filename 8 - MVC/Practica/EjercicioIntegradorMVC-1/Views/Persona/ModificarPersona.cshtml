@using EjercicioIntegradorMVC_1.Models
@using EjercicioIntegradorMVC_1.Resources
@model Persona

@{ ViewBag.Title = "Modificar Persona"; }

<head>
    <link href="@Url.Content("~/Content/styles.css")" rel="stylesheet" type="text/css" />
</head>

<h2>Modificar Persona</h2>

@* https://stackoverflow.com/questions/19703753/how-to-make-the-html-editorfor-disabled/19703838#19703838 *@

@using (Html.BeginForm()) {

    @Html.AntiForgeryToken()

    <div id="app" class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.IdList, "Seleccione un ID", new { @class = "form-control" })
                <div class="validation-message">
                    @Html.ValidationMessage("IdSelect", "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @id = "Nombre", @class = "form-control", @disabled = "disabled" } })
                <div class="validation-message">
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @id = "Apellido", @class = "form-control", @disabled = "disabled" } })
                <div class="validation-message">
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDoc, "Tipo de Documento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoDoc, new SelectList(new[] {
                    new SelectListItem { Text = "DNI", Value = "1" },
                    new SelectListItem { Text = "LE", Value = "2" },
                    new SelectListItem { Text = "LC", Value = "3" },
                }, "Value", "Text"), "Seleccione un tipo de documento", new { @id = "TipoDoc", @class = "form-control", @disabled = "disabled" })
                <div class="validation-message">
                    @Html.ValidationMessageFor(model => model.TipoDoc, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NroDoc, "Número de Documento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NroDoc, new { htmlAttributes = new { @id = "NroDoc", @class = "form-control", @disabled = "disabled" } })
                <div class="validation-message">
                    @Html.ValidationMessageFor(model => model.NroDoc, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Aplicar Cambios" class="confirm-button" />
            </div>
        </div>

    </div>
}

<br />
@Html.ActionLink(ResourceGlobal.BotonRegreso, "Index", "Persona", new { @class = "link-back-button" })



@section Scripts {
    
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $("#Id").change(function () {
                var idSelected = $(this).val();
                if (idSelected) {
                    obtenerPersonaPorId(idSelected);
                } else {
                    completarCampos(null);
                }
            });
        });

        function obtenerPersonaPorId(id) {
            $.ajax({
                url: '@Url.Action("ObtenerPersonaPorId", "Persona")',
                type: "GET",
                data: { id: id },
                dataType: "JSON",
                success: function (response) {
                    if (response) {
                        completarCampos(response);
                    }
                },
                error: function (jqXhr, status, error) {
                    console.log("Error en seleccionar: " + error.message);
                }
            });
        }

        function completarCampos(data) {
            if (data) {
                $("#Nombre").val(data.Nombre).prop("disabled", false);
                $("#Apellido").val(data.Apellido).prop("disabled", false);
                $("#TipoDoc").val(data.TipoDoc).prop("disabled", false);
                $("#NroDoc").val(data.NroDoc).prop("disabled", false);
            } else {
                $("#Nombre, #Apellido, #TipoDoc, #NroDoc").val("").prop("disabled", true);
            }
        }
    </script>

}
